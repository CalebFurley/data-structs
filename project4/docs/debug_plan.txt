--------------------------------------------------------------------------------------------------
Specific Tests:
  The first tests performmed on the program where outputing the input gathered when
  building the vector and getting the number of commands for the main loop of the
  program.
    This was completed to make sure (and was able to find a fix) bugs around how input
    is being read into the program and make sure there is a solid foundation before
    jumping into the main part of the program.
  
  The next tests were conducted on the buildTree method as it was the first method
  to be implemented due to its call at the top of main. I frst used the cout<< s for start
  and end, then had GPT review and explain the code a bit so I could comment and understand
  it better.
  
  Once the buildTree() was verified I easily wrote the isLeaf and tested it actually whilst 
  writing the collected values. During collectValues() there were many errors with segmentation
  faults which I ended up needing to fix different return types, ways to store variables, etc.
  But also during the process I needed to debug buildTree even further, and found that the 
  buildTree method really does work properly.
    Eventually, after much debugging I was able to get the values to collect correctly. It had to
    do with the fact that I changed some variables to heap allocated and pointers to them, and it
    messed up allocation making internal nodes full of nullptrs making them seem like leafs. (basically
    coulnt traverse past the root becuse the root's children were nullptrs..) Once that was fixed,
    I just needed to put an if statement to catch zero values when collected and skip over them, and boom,
    we were collecting values from the tree correctly and were able to verify that the buildTree() method
    works correctly as well.

--------------------------------------------------------------------------------------------------
Issues and Resolutions:
  Whilst writing the collectValues() method, there were issues with segmentation faults based
  on how I was accessing variables and returing others. I was able to fix this by carefully 
  analyzing the variable types and making them the most logical and flexible they could be while
  also applying and not causing more segmentation faults on access.
  
  There were also many issues with nodes not being found that existed, or ndoes not existing that should,
  and it was hard to debug past a certain point since chat gpt had started generating alot of extra code,
  and all my handwritten code did make since why it wouldnt work. But through lots and lots and checking
  and cout << to track errors I was able to track and fix them.

--------------------------------------------------------------------------------------------------
Verification:
  The verifcation of the program came from looking for difference in the programs output with the
  the given output. This was all generated via the given main function. I also tested by manually 
  adding print statements to check where values were going and how they were being handled. And lastly
  the gradescope checks were used for final verifcation of the output of the program.
--------------------------------------------------------------------------------------------------